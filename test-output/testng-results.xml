<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="1" ignored="0" total="3" passed="1">
  <reporter-output>
    <line>
      <![CDATA[TestNG_ReportsAndLogs -> This runs once before class]]>
    </line>
    <line>
      <![CDATA[TestNG_ReportsAndLogs -> This runs before every method]]>
    </line>
    <line>
      <![CDATA[TestNG_ReportsAndLogs -> testMethod2]]>
    </line>
    <line>
      <![CDATA[TestNG_ReportsAndLogs -> This runs after every method]]>
    </line>
    <line>
      <![CDATA[TestNG_ReportsAndLogs -> This runs before every method]]>
    </line>
    <line>
      <![CDATA[TestNG_ReportsAndLogs -> testMethod1]]>
    </line>
    <line>
      <![CDATA[TestNG_ReportsAndLogs -> This runs after every method]]>
    </line>
    <line>
      <![CDATA[TestNG_ReportsAndLogs -> This runs once after class]]>
    </line>
  </reporter-output>
  <suite name="Regression TestSuite" duration-ms="64" started-at="2019-12-09T11:10:39 ART" finished-at="2019-12-09T11:10:39 ART">
    <groups>
    </groups>
    <test name="Application Test" duration-ms="64" started-at="2019-12-09T11:10:39 ART" finished-at="2019-12-09T11:10:39 ART">
      <class name="ReportersAndLogs.TestNGReportersAndLogs">
        <test-method status="PASS" signature="setUp()[pri:0, instance:ReportersAndLogs.TestNGReportersAndLogs@6276ae34]" name="setUp" is-config="true" duration-ms="11" started-at="2019-12-09T11:10:39 ART" finished-at="2019-12-09T11:10:39 ART">
          <reporter-output>
            <line>
              <![CDATA[TestNG_ReportsAndLogs -> This runs once before class]]>
            </line>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:ReportersAndLogs.TestNGReportersAndLogs@6276ae34]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-12-09T11:10:39 ART" finished-at="2019-12-09T11:10:39 ART">
          <reporter-output>
            <line>
              <![CDATA[TestNG_ReportsAndLogs -> This runs before every method]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="testMethod2()[pri:0, instance:ReportersAndLogs.TestNGReportersAndLogs@6276ae34]" name="testMethod2" duration-ms="2" started-at="2019-12-09T11:10:39 ART" finished-at="2019-12-09T11:10:39 ART">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at ReportersAndLogs.TestNGReportersAndLogs.testMethod2(TestNGReportersAndLogs.java:42)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:73)
at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[TestNG_ReportsAndLogs -> testMethod2]]>
            </line>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:ReportersAndLogs.TestNGReportersAndLogs@6276ae34]" name="afterMethod" is-config="true" duration-ms="0" started-at="2019-12-09T11:10:39 ART" finished-at="2019-12-09T11:10:39 ART">
          <reporter-output>
            <line>
              <![CDATA[TestNG_ReportsAndLogs -> This runs after every method]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:ReportersAndLogs.TestNGReportersAndLogs@6276ae34]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-12-09T11:10:39 ART" finished-at="2019-12-09T11:10:39 ART">
          <reporter-output>
            <line>
              <![CDATA[TestNG_ReportsAndLogs -> This runs before every method]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testMethod1()[pri:0, instance:ReportersAndLogs.TestNGReportersAndLogs@6276ae34]" name="testMethod1" duration-ms="1" started-at="2019-12-09T11:10:39 ART" finished-at="2019-12-09T11:10:39 ART">
          <reporter-output>
            <line>
              <![CDATA[TestNG_ReportsAndLogs -> testMethod1]]>
            </line>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:ReportersAndLogs.TestNGReportersAndLogs@6276ae34]" name="afterMethod" is-config="true" duration-ms="0" started-at="2019-12-09T11:10:39 ART" finished-at="2019-12-09T11:10:39 ART">
          <reporter-output>
            <line>
              <![CDATA[TestNG_ReportsAndLogs -> This runs after every method]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="testMethod3()[pri:0, instance:ReportersAndLogs.TestNGReportersAndLogs@6276ae34]" name="testMethod3" duration-ms="0" started-at="2019-12-09T11:10:39 ART" depends-on-methods="ReportersAndLogs.TestNGReportersAndLogs.testMethod2" finished-at="2019-12-09T11:10:39 ART">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestNGReportersAndLogs.testMethod3()[pri:0, instance:ReportersAndLogs.TestNGReportersAndLogs@6276ae34] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestNGReportersAndLogs.testMethod3()[pri:0, instance:ReportersAndLogs.TestNGReportersAndLogs@6276ae34] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:99)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:73)
at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:ReportersAndLogs.TestNGReportersAndLogs@6276ae34]" name="cleanUp" is-config="true" duration-ms="1" started-at="2019-12-09T11:10:39 ART" finished-at="2019-12-09T11:10:39 ART">
          <reporter-output>
            <line>
              <![CDATA[TestNG_ReportsAndLogs -> This runs once after class]]>
            </line>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- ReportersAndLogs.TestNGReportersAndLogs -->
    </test> <!-- Application Test -->
  </suite> <!-- Regression TestSuite -->
</testng-results>
